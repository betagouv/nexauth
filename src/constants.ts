export const ACCESS_TOKEN_EXPIRATION_IN_SECONDS =
  Number(process.env.NEXT_PUBLIC_ACCESS_TOKEN_EXPIRATION_IN_SECONDS) || 20 * 60
export const REFRESH_TOKEN_EXPIRATION_IN_SECONDS =
  Number(process.env.NEXT_PUBLIC_REFRESH_TOKEN_EXPIRATION_IN_SECONDS) || 30 * 24 * 60 * 60

export enum NexauthError {
  GET_USER_MALFORMED_AUTHORIZATION_HEADER = 'GET_USER_MALFORMED_AUTHORIZATION_HEADER',
  GET_USER_MISSING_AUTHORIZATION_HEADER = 'GET_USER_MISSING_AUTHORIZATION_HEADER',
  GET_USER_UNVERIFIABLE_AUTHORIZATION_HEADER = 'GET_USER_UNVERIFIABLE_AUTHORIZATION_HEADER',
  LOG_IN_NOT_FOUND = 'LOG_IN_NOT_FOUND',
  /** Thrown when login credentials are accepted but this user doesn not meet your custom `config.logInConditions` */
  LOG_IN_UNACCEPTABLE_CONDITION = 'LOG_IN_UNACCEPTABLE_CONDITION',
  LOG_IN_WRONG_EMAIL_OR_PASSWORD = 'LOG_IN_WRONG_EMAIL_OR_PASSWORD',
  SIGN_UP_DUPLICATE_EMAIL = 'SIGN_UP_DUPLICATE_EMAIL',
  UNEXPECTED_ERROR = 'UNEXPECTED_ERROR',
}
