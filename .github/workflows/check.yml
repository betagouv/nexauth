name: Check

on: push

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.5.0
        with:
          cache: yarn
          node-version: 16
      - name: Install
        run: yarn
      - name: Run linter
        run: yarn test:lint --ignore-pattern '/__tests__/*'

  type:
    name: Type
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.5.0
        with:
          cache: yarn
          node-version: 16
      - name: Install
        run: yarn
      - name: Check types
        run: yarn test:type

  test_unit:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.5.0
        with:
          cache: yarn
          node-version: 16
      - name: Install
        run: yarn
      - name: Setup unit tests
        run: yarn test:unit:setup
      - name: Run unit tests
        run: yarn test:unit --coverage --maxWorkers="50%"
      - name: Upload unit tests coverage
        run: yarn codecov

  test_e2e:
    name: E2E Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_db_user
          POSTGRES_PASSWORD: test_db_password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        if: ${{ always() }}
        id: cache
        uses: actions/cache@v2
        # https://playwright.dev/docs/ci#directories-to-cache
        with:
          path: |
            ~/.cache/ms-playwright
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Setup Node.js
        uses: actions/setup-node@v2.5.0
        with:
          cache: yarn
          node-version: 16
      - name: Install
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: yarn --frozen-lockfile
      - name: Install Playwright browsers
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          npx playwright install-deps chromium
          npx playwright install chromium
      - name: Setup end-to-end tests
        run: yarn test:e2e:setup
      - name: Serve test application
        run: yarn test:e2e:serve
      - name: Run end-to-end tests
        run: yarn test:e2e
      - name: Archive failed tests trace
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: |
            ./test-results
